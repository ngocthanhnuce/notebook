{"version":3,"sources":["component/admin.js","App.js","serviceWorker.js","index.js"],"names":["Admin","useState","notes","setNotes","localStorage","getItem","JSON","stringify","listSearch","setListSearch","search","setSearch","addNote","setAddNote","addDetail","setAddDetail","detail","setDetail","arrSearch","setArrSearch","deleteDetail","listDetail","itemId","lists","noteList","map","list","note","detailNote","filter","idx","id","arrDelete","arrNote","arrDetailNote","newArrSearch","newDetail","listItem","className","onSubmit","e","results","Fuse","includeScore","keys","listResult","push","el","item","preventDefault","type","placeholder","value","onChange","handleChange","target","style","display","onClick","uuidv4","title","paddingTop","sortName","sort","a","b","width","marginLeft","height","index","key","onDetail","idDelete","handleDelete","items","arr","titleDetail","arrDetail","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.21673834.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Fuse from 'fuse.js';\r\n\r\nconst Admin = () => {\r\n    const [notes, setNotes] = useState([]);\r\n    localStorage.getItem('dataNote', JSON.stringify(notes));\r\n    const [listSearch, setListSearch] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [addNote, setAddNote] = useState('');\r\n\r\n    const [addDetail, setAddDetail] = useState('');\r\n    const [detail, setDetail] = useState();\r\n    const [arrSearch,setArrSearch] = useState('')\r\n\r\n    const handleChange= (e) => {\r\n        setSearch(e);\r\n        if(e === ''){\r\n            setArrSearch('');\r\n            setNotes(listSearch);\r\n        }\r\n    }\r\n    //Add notes\r\n    const handleAdd = (e) => {\r\n        e.preventDefault();\r\n        if (addNote) {\r\n            listSearch.push({ id: uuidv4(), title: addNote, note: [] });        \r\n            setNotes(listSearch);\r\n            setAddNote('');         \r\n        }\r\n    }\r\n    //Show detail\r\n    const onDetail = (detail) => {\r\n        setDetail([detail]);\r\n    }\r\n    //Add detail\r\n    const handleAddDetail = (arr) => {\r\n        if (addDetail) {\r\n            arr.push({ id: uuidv4(), titleDetail: addDetail, arrDetail: [] });\r\n            setAddDetail('');\r\n        }\r\n    }\r\n    //Delete note\r\n    const handleDelete = (idDelete) => {\r\n        const arrDelete = notes.filter(item => item.id !== idDelete);\r\n        setNotes(arrDelete);\r\n\r\n        setListSearch(listSearch.filter(item => item.id !== idDelete)) ;  \r\n        setDetail('');\r\n    }\r\n    const handleSearch = (e) => {\r\n        setArrSearch(true);\r\n        if (search !== '' && listSearch !== '') {\r\n            setArrSearch(true);\r\n            const options = {\r\n                includeScore: true,\r\n                keys: ['title']\r\n            }\r\n            const fuse = new Fuse(listSearch, options);\r\n            const results = fuse.search(search);\r\n            const listResult = [];\r\n            listResult.push(results.map(el => el.item));\r\n            setNotes(listResult[0]);\r\n        }\r\n        else {\r\n            setNotes(listSearch);\r\n            setArrSearch('');\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    // Sort by Name\r\n    const sortName = () =>{\r\n        // eslint-disable-next-line array-callback-return\r\n        let sortName = notes.sort((a, b) => {\r\n        if(a.title>b.title){\r\n            return 1;\r\n        }\r\n        else if(a.title<b.title){\r\n            return -1;\r\n        }\r\n        });\r\n        setNotes([...sortName]);\r\n    }\r\n    //Delete detail\r\n    const deleteDetail = (listDetail, itemId) => {\r\n        const lists = [...notes];\r\n        const noteList = detail.map(list => list.note);        \r\n        const detailNote = noteList[0].filter(idx => idx.id !== listDetail.id);\r\n        const arrDelete = lists.map(arrNote => {\r\n\r\n            if (arrNote.id === itemId) {\r\n                return { ...arrNote, note: detailNote }\r\n            }\r\n            return arrNote;\r\n        });\r\n    const arrSearch = [...listSearch];\r\n        const arrDetailNote = noteList[0].filter(idx => idx.id !== listDetail.id);\r\n        const newArrSearch = arrSearch.map(arrNote => {\r\n\r\n            if (arrNote.id === itemId) {\r\n                return { ...arrNote, note: arrDetailNote }\r\n            }\r\n            return arrNote;\r\n        });\r\n        const newDetail = detail.map(listItem => {\r\n            if (listItem.id === itemId) {\r\n                return { ...listItem, note: detailNote }\r\n            }\r\n            return listItem;\r\n        });\r\n        setDetail(newDetail);\r\n        setNotes(arrDelete);\r\n        setListSearch(newArrSearch);\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin\">\r\n            <h1>NoteBook</h1>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <h3>All Note</h3>\r\n                    <div className = \"search\">\r\n                       <form onSubmit={handleSearch}>\r\n                        <div className = \"row-form\">\r\n                                <input type=\"text\" className=\"form-control\"  placeholder=\"Search...\" value={search} onChange={e => handleChange(e.target.value)}/>\r\n                                <button className=\"btn btn-primary\" type=\"submit\" >Search</button>\r\n                            </div>\r\n                       </form>\r\n                    </div>\r\n                    <div className=\"admin-add\">\r\n                        <form className = \"form-group\">\r\n                            <input type=\"text\" className=\"form-control\" value = {addNote} onChange = {e => setAddNote(e.target.value)} placeholder=\"Add note...\" />                \r\n                            { arrSearch ? <button className=\"btn btn-primary arr-note\" type=\"button\">Add<i className=\"fas fa-address-card mt icon\"></i></button> : \r\n                            <button className=\"btn btn-primary arr-note\" style = {{display: \"flex\"}} onClick = {handleAdd}>Add<i className=\"fas fa-address-card mt\" style = {{paddingTop: \"6%\"}}></i></button>}\r\n                        </form>\r\n                        <button className = \"btn btn-primary sort\" onClick={ sortName } style = {{width: \"20%\", marginLeft: \"15%\", height: \"1%\"}}>Sort by name<i className=\"fas fa-file-signature mt\"></i></button>\r\n                    </div>\r\n                    <div className = \"col-6\">\r\n                        { notes ? notes.map((item, index) => (\r\n                            <div key={index} className=\"col-12 add-note\">\r\n                                <div className=\"detail\">\r\n                                    <button className = \"btn btn-primary notes\" type = \"button\" onClick = {() => onDetail(item)}>{item.title}</button>                                  \r\n                                    <button type=\"button\" onClick={ () => handleDelete(item.id)} className=\"delete\"><i className=\"fas fa-trash-alt\"></i></button>\r\n                                </div>      \r\n                            </div>\r\n                        )) : ('')}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <h3>My Note</h3>\r\n                    { detail ? detail.map((items, index) => (\r\n                        <div key={index} className = \"item-detail\">\r\n                            <div className=\"d-flex detail\">\r\n                                <div className=\"admin-add-detail\">\r\n                                    <input type=\"text\" className=\"form-control\" value = {addDetail} onChange = { e => setAddDetail(e.target.value)} placeholder=\"Add detail...\" />\r\n                                    <button className=\"btn btn-primary\" style = {{display: \"flex\", width: \"60%\"}} onClick = { () => handleAddDetail(items.note)}>Add Detail<i className=\"fas fa-address-card mt icon\" ></i></button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"list-detail\">\r\n                                { items.note ? items.note.map((detail, index) => (\r\n                                    <div key={index} className=\"admin-detail-mt\">\r\n                                        <div className=\"add-note-mt\">\r\n                                            <button className = \"btn btn-primary m-10\" type = \"button\"> {detail.titleDetail}</button>                                  \r\n                                            <button type=\"button\" onClick={ () => deleteDetail(detail, items.id)} className=\"delete\"><i className=\"fas fa-trash-alt\"></i></button>                 \r\n                                        </div>\r\n                                    </div>\r\n                                )) : ('')}\r\n                            </div>\r\n                        </div>\r\n                    )) : ('')}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Admin;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Admin from './component/admin';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Admin/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}